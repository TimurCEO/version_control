# Инструкция по работе с Git

## Основные команды
- Для инициализации нового репозитория и отслеживания каталога необходимо использовать команду: **init**
```
git init
```
- Для проверки состояния файлов в рабочей директории необходимо использовать команду: **status**
```
git status
```
- Для добавления содержимого рабочей директории для последующего коммита необходимо использовать команду: **add**
```
git add /filename
```
 - Для последующего коммита нужно использовать команду: **commit** где -m является сообщением о совершенных действиях
 ```
git commit -m "message"
```
- Для выяснения разницы между Git *деревьями* (tree), либо же разницы между рабочей директорией и индексом нужно использовать команду: **diff**
```
git diff
```
- Для отмены изменений нужно использовать команды: **reset** и **restore**, но эти команды работают только на локальных репозиториях, чтобы поделится своими изменениями нужно использовать команду **revert**
```
git restore/reset 
```
```
git revert
```

## Ветки

- Для создания новой ветки необходимо использовать команду **branch** и задать ей имя
```
git branch
```
- Для удаления ветки:
```
git branch -d /branchname
```
- Для переключения между ветками необходимо использовать команду: **checkout**
```
git checkout
```
- Для возврата на основную ветку мастера:
```
git checkout master
```
- Для слияния веток необходимо использовать команду: **merge**
```
git merge
```
- Для просмотра истории коммитов, начиная с самого последнего необходимо использовать команду: **log**
```
git log
```
- Для просмотра в *сокращенном* формате:
```
git log --oneline
```
- Для просмотра в формате *графика*:
```
git log --graph
```
## Удаленные репозитории
- Для клонирования удаленного репозитория необходимо использовать команду: **clone**
```
git clone
```
- Для установления связи с удаленным репозиторием и передачи в локальный необходимо ввести команду: **push**
```
git push
```
- Для отправки из локального репозиторяи в удаленный необходимо использовать команду: **pull**
```
git pull
```
